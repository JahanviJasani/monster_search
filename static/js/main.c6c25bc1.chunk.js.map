{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","CardList","monsters","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAO,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC9B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,eACR,gCACE,oBAAIG,UAAU,eAAd,SAA8BF,IAC9B,mBAAGE,UAAU,UAAb,SAAwBD,WCLnBG,G,MAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OACE,qBAAKH,UAAU,YAAf,SAEIG,EAASC,KAAI,SAAAC,GAAO,OAClB,cAAC,EAAD,CAEER,GAAIQ,EAAQR,GACZC,KAAMO,EAAQP,KACdC,MAAOM,EAAQN,OAHVM,EAAQR,WCPZS,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACED,YAAeA,EACfE,KAAO,SACPT,UAAY,SACZU,SAAYF,MCsCHG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO1C,WAEE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAQ,SAAApB,GAAO,OAC/CA,EAAQP,KAAK4B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK1B,UAAU,sBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,iDACA,cAAC,EAAD,CACEO,YAAY,kBACZC,aAAgBe,KAAKf,kBAGzB,cAAC,EAAD,CAAUL,SAAUqB,W,GApCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c6c25bc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = ({id, name, email}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={`https://robohash.org/${id}?set=set2`} />\r\n      <div>\r\n        <h3 className=\"ma4 mb2 navy\">{name}</h3>\r\n        <p className=\"ma0 mb3\">{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = ({monsters}) => {\r\n  return (\r\n    <div className=\"card_list\">\r\n      { \r\n        monsters.map(monster => (\r\n          <Card\r\n            key={monster.id}\r\n            id={monster.id}\r\n            name={monster.name}\r\n            email={monster.email}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      placeholder = {placeholder}\r\n      type = \"search\"\r\n      className = \"search\"\r\n      onChange = {handleChange}\r\n    />\r\n  )\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    \n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"text-center wrapper\">\n        <div className=\"mb-50\">\n          <h1>Monster Friends</h1>\n          <SearchBox \n            placeholder='Search Monsters' \n            handleChange = {this.handleChange}\n          />\n        </div>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}